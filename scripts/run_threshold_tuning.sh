#!/bin/bash

# Smart Money Whale Strategy Threshold Tuning Runner
# This script runs comprehensive threshold tuning to find optimal whale criteria

echo "üéØ SMART MONEY WHALE THRESHOLD TUNING SYSTEM"
echo "=============================================="

# Check if we're in a virtual environment
if [[ "$VIRTUAL_ENV" == "" ]]; then
    echo "‚ö†Ô∏è  WARNING: Not in a virtual environment"
    echo "   Run: source venv/bin/activate"
    read -p "Continue anyway? (y/N): " confirm
    if [[ $confirm != [yY] ]]; then
        echo "‚ùå Exiting"
        exit 1
    fi
fi

# Check API key
if [[ -z "$BIRDEYE_API_KEY" ]]; then
    echo "‚ùå BIRDEYE_API_KEY environment variable not set"
    echo "   Please set it with: export BIRDEYE_API_KEY=your_key_here"
    exit 1
fi

# Create results directory if it doesn't exist
mkdir -p scripts/results

echo ""
echo "üîß CONFIGURATION OPTIONS:"
echo "========================="
echo "1. Comprehensive Analysis (Test all 5 levels)"
echo "2. Stop on First Success (Stop when tokens found)"
echo ""
read -p "Select option (1 or 2): " option

case $option in
    1)
        echo "üìä Running comprehensive analysis of all threshold levels..."
        STOP_ON_SUCCESS="false"
        ;;
    2)
        echo "üéØ Running until first successful level found..."
        STOP_ON_SUCCESS="true"
        ;;
    *)
        echo "‚ùå Invalid option. Defaulting to comprehensive analysis."
        STOP_ON_SUCCESS="false"
        ;;
esac

echo ""
echo "üöÄ STARTING THRESHOLD TUNING..."
echo "================================"
echo "üìä Testing 5 threshold levels:"
echo "   Level 1: Maximum Selectivity (Ultra-strict)"
echo "   Level 2: High Selectivity (20% relaxed)"
echo "   Level 3: Medium Selectivity (40% relaxed)"
echo "   Level 4: Low Selectivity (60% relaxed)"
echo "   Level 5: Minimum Viable (80% relaxed)"
echo ""
echo "‚è±Ô∏è  This may take several minutes..."
echo "üåê Will make API calls to analyze whale activity"
echo "üíæ Results will be saved to scripts/results/"
echo ""

# Run the threshold tuning script
if [[ "$STOP_ON_SUCCESS" == "true" ]]; then
    echo "üõë Stop on first success: ENABLED"
else
    echo "üìä Comprehensive analysis: ENABLED"
fi

echo ""
echo "‚ñ∂Ô∏è  Executing threshold tuning..."
echo ""

# Use the virtual environment's Python explicitly
venv/bin/python scripts/tune_smart_money_whale_thresholds.py

exit_code=$?

echo ""
echo "======================================="
if [ $exit_code -eq 0 ]; then
    echo "‚úÖ THRESHOLD TUNING COMPLETED SUCCESSFULLY!"
    echo ""
    echo "üìÅ Check scripts/results/ for:"
    echo "   ‚Ä¢ threshold_tuning_results_*.json (comprehensive analysis)"
    echo "   ‚Ä¢ optimal_whale_config_*.json (optimal configuration)"
    echo ""
    echo "üí° NEXT STEPS:"
    echo "   1. Review the results files"
    echo "   2. Apply optimal configuration to production"
    echo "   3. Test with the recommended thresholds"
else
    echo "‚ùå THRESHOLD TUNING FAILED (exit code: $exit_code)"
    echo ""
    echo "üîç TROUBLESHOOTING:"
    echo "   ‚Ä¢ Check API key is valid"
    echo "   ‚Ä¢ Verify internet connection"
    echo "   ‚Ä¢ Check logs for specific errors"
    echo "   ‚Ä¢ Ensure all dependencies are installed"
fi

echo "=======================================" 